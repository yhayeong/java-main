package item;

public class Unit {
	
	int healthPoint; 
	final int MAX_HP; //***final인스턴스변수는 생성자에서 초기화한다*** 
	//종족당 각각 다른 값을 가지게하려면 생성자에서 초기화해야한다

	/* 
	 미시적 초기화와 생성자를 통한 초기화를 동시에 할수는 없다 
	 (명시적 초기화->생성자를 통한 초기화) 초기화를 두번 하게되는것이므로 final의 의미인 변경금지에 위배됨
	 즉 final인스턴스변수는 명시적 초기화와 생성자를 통한 초기화 두가지 방법이 모두 가능하지만,
	 일반적으로 생성자를 통한 초기화를 사용하는 것이 의미상 적절하다
	 
	cf. final스태틱변수는 명시적 초기화만 가능하다(생성자를 통해 초기화한다는 것의 의미는 인스턴스마다 값을 따로 가지겠다는 것)
	*/
	
	
	Unit(int hp) {
		MAX_HP = hp;
		healthPoint = MAX_HP;
	}
	//기본생성자가 없도록 한다 ===> 반드시 값을 받아서 초기화하도록 강제한다

	
	/*
	 자식클래스를 보면 자식의 기본생성자를 통해서 
	 부모로부터 상속받은 (final인스턴스변수)MAX_HP에 리터럴 값으로 초기화하며 객체를 생성하게끔 해두었다
	 
	 즉 자식의 기본생성자가 호출되면 부모의 매개변수가 있는 생성자에 클래스마다 다른 리터럴 값을 넣어주면서 인스턴스를 생성하게돼있다
	 
	 
	public class Zerg extends AirUnit {

		public Zerg() {
			super(200);
		}
	}
	  
	  
	  
	정리하면 어떤 부모클래스를 상속받은 각 자식객체들이 각각의 값을 가지는 final인스턴스변수를 가지도록 생성하고자할때
	부모클래스에 final인스턴스변수를 선언해두고 매개변수를 가지는 생성자만 만들어둔다
	그 다음 자식의 기본생성자에서 각각의 객체마다 초기값으로 다르게 가질 리터럴 값을 부모의 매개변수가 있는 생성자의 매개변수로 넣어준다.
	*/
	
	

}
